---
AWSTemplateFormatVersion: '2010-09-09'
Description: This stack deploys the core infrastructure and IAM resources
             to be used for Nubox.

Parameters:

  ###############
  #   General   #
  ###############

  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: nubox

  SourceStackName:
    Description: "Source stack name"
    Type: String
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: "nubox"

  NuboxCodeCommitRepository:
    Description: "Repository for nubox"
    Type: String
    AllowedPattern: '^[a-zA-Z][-a-zA-Z0-9]*$'
    Default: "nubox-Repository"

Resources:

  ###############
  #     S3      #
  ###############

  # S3 Bucket Artifacts
  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${EnvironmentName}-app-artifacts

  ArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: '2012-10-17'
        Statement:
          - Sid: CodeGetPutAllow
            Action: 
              - 's3:GetObject'
              - 's3:GetObjectVersion'
              - 's3:GetObject'
              - 's3:PutObject'
            Effect: Allow
            Resource: 
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref ArtifactsBucket
              - !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref ArtifactsBucket
                  - /*
            Principal:
              AWS:
                - !GetAtt CodePipelineServiceRole.Arn
                - !GetAtt CodeBuildServiceRole.Arn
      Bucket: !Ref ArtifactsBucket

  ###############
  #    CODE     #
  ###############
  # CodeCommit repository
  # NuboxCodeCommitRepository:
  #   Type: AWS::CodeCommit::Repository
  #   Properties: 
  #     RepositoryName: !Sub ${EnvironmentName}-Repository


  # IAM service role for CodePipeline
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${EnvironmentName}-CodePipelineServiceRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: !Sub ${EnvironmentName}-CodePipelineServicePolicy
        PolicyDocument:
          Statement:
          - Action:
            - codecommit:GetBranch
            - codecommit:GetCommit
            - codecommit:UploadArchive
            - codecommit:GetUploadArchiveStatus
            - codecommit:CancelUploadArchive
            Resource: "*"
            Effect: Allow
          - Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketVersioning
            Resource: "*"
            Effect: Allow
          - Action:
            - s3:PutObject
            Resource:
            - arn:aws:s3:::*
            Effect: Allow
          - Action:
            - elasticloadbalancing:*
            - autoscaling:*
            - cloudwatch:*
            - "ec2:*"
            - codebuild:*
            - iam:PassRole
            Resource: "*"
            Effect: Allow
          Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeDeployFullAccess

  # IAM service role for CodeBuild
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${EnvironmentName}-CodeBuildServiceRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: !Sub ${EnvironmentName}-CodeBuildServicePolicy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
            - "codecommit:ListBranches"
            - "codecommit:ListRepositories"
            - "codecommit:BatchGetRepositories"
            - "codecommit:Get*"
            - "codecommit:GitPull"
            Resource:
            - arn:aws:codecommit:us-west-2:139667354481:nubox-Repository
          - Effect: "Allow"
            Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            Resource: "*"
          - Effect: "Allow"
            Action:
            - "s3:PutObject"
            - "s3:GetObject"
            - "s3:GetObjectVersion"
            - "s3:ListBucket"
            Resource: "*"
          - Effect: "Allow"
            Action:
            - "codebuild:CreateReportGroup"
            - "codebuild:CreateReport"
            - "codebuild:UpdateReport"
            - "codebuild:BatchPutTestCases"
            - "codebuild:BatchPutCodeCoverages"
            Resource: "*"

  # IAM service role for CodeDeploy
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${EnvironmentName}-CodeDeployServiceRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codedeploy.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole

  # CodeBuild project
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${EnvironmentName}-WebServer
      Artifacts: 
        Type: NO_ARTIFACTS
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref "AWS::AccountId"
          - Name: AWS_DEFAULT_REGION
            Value: !Ref "AWS::Region"
        Type: LINUX_CONTAINER
      # LogsConfig: 
      #   LogsConfig
      ServiceRole: !Ref CodeBuildServiceRole
      Source:
        Type: CODECOMMIT
        Location: https://git-codecommit.us-west-2.amazonaws.com/v1/repos/nubox-Repository

  # Codedeploy applications
  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Sub ${EnvironmentName}-WebServer
      ComputePlatform: Server

  # Codedeploy deployment group
  DeploymentGroup: 
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties: 
      ApplicationName: !Ref CodeDeployApplication
      AutoScalingGroups:
        - Fn::ImportValue: 
            Fn::Sub: "${SourceStackName}-ASGWebServer"
      DeploymentGroupName: !Sub ${EnvironmentName}-WebServer
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      LoadBalancerInfo:
        TargetGroupInfoList:
          - Name: 
              Fn::ImportValue:
                !Sub "${SourceStackName}-ALBTargetGroup"
      ServiceRoleArn: !GetAtt CodeDeployServiceRole.Arn

  # CodePipeline pipeline backend
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${EnvironmentName}-WebServer
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location:
          !Ref ArtifactsBucket
      Stages:
        -
          Name: Source 
          Actions: 
            - 
              Name: Source
              ActionTypeId: 
                Category: Source 
                Owner: AWS 
                Version: 1 
                Provider: CodeCommit 
              OutputArtifacts: 
                - 
                  Name: !Sub ${EnvironmentName}-SourceArtifact
              Configuration: 
                BranchName: master
                RepositoryName: nubox-Repository
              RunOrder: 1
        -
          Name: Build 
          Actions: 
            - 
              Name: Build
              ActionTypeId: 
                Category: Build 
                Owner: AWS 
                Version: 1 
                Provider: CodeBuild 
              OutputArtifacts: 
                - 
                  Name: !Sub ${EnvironmentName}-BuildArtifact
              InputArtifacts: 
                - 
                  Name: !Sub ${EnvironmentName}-SourceArtifact
              Configuration: 
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
        -
          Name: Deploy 
          Actions: 
            - 
              Name: Deploy
              ActionTypeId: 
                Category: Deploy 
                Owner: AWS 
                Version: 1 
                Provider: CodeDeploy 
              InputArtifacts: 
                - Name: !Sub ${EnvironmentName}-SourceArtifact
              Configuration: 
                ApplicationName: !Ref CodeDeployApplication
                DeploymentGroupName: !Ref DeploymentGroup
              RunOrder: 1

# Outputs:

